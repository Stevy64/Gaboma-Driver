# Generated by Django 4.2.7 on 2025-09-25 18:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('drivers', '0002_alter_chauffeur_actif_alter_chauffeur_date_creation_and_more'),
        ('activities', '0003_demandemodification'),
    ]

    operations = [
        migrations.AlterField(
            model_name='activite',
            name='carburant_litres',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Quantité de carburant en litres (legacy)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Carburant (litres)'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='carburant_pourcentage',
            field=models.IntegerField(blank=True, help_text='Pourcentage de carburant (legacy)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Carburant (%)'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='chauffeur',
            field=models.ForeignKey(help_text='Chauffeur associé à cette activité', on_delete=django.db.models.deletion.CASCADE, to='drivers.chauffeur', verbose_name='Chauffeur'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='date_creation',
            field=models.DateTimeField(auto_now_add=True, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='date_heure',
            field=models.DateTimeField(help_text="Date et heure de l'activité", verbose_name='Date et heure'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='etat_vehicule',
            field=models.TextField(blank=True, help_text="Description de l'état du véhicule (legacy)", null=True, verbose_name='État du véhicule'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='notes',
            field=models.TextField(blank=True, help_text='Notes additionnelles (legacy)', null=True, verbose_name='Notes'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='recette_jour',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Recette réalisée en euros (legacy)', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Recette du jour (€)'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='signature',
            field=models.TextField(blank=True, help_text='Signature électronique du chauffeur', null=True, verbose_name='Signature'),
        ),
        migrations.AlterField(
            model_name='activite',
            name='type_activite',
            field=models.CharField(choices=[('prise', 'Prise de clés'), ('remise', 'Remise de clés')], help_text="Type d'activité : prise ou remise de clés", max_length=10, verbose_name="Type d'activité"),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='admin_traite',
            field=models.ForeignKey(blank=True, help_text='Administrateur qui a traité cette demande', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Admin qui a traité'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='chauffeur',
            field=models.ForeignKey(help_text='Chauffeur qui fait la demande de modification', on_delete=django.db.models.deletion.CASCADE, to='drivers.chauffeur', verbose_name='Chauffeur'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='commentaire_admin',
            field=models.TextField(blank=True, help_text="Commentaire de l'administrateur sur la demande", verbose_name="Commentaire de l'admin"),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='date_activite',
            field=models.DateField(help_text="Date de l'activité à modifier", verbose_name="Date de l'activité"),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='date_creation',
            field=models.DateTimeField(auto_now_add=True, help_text='Date et heure de création de la demande', verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='date_traitement',
            field=models.DateTimeField(blank=True, help_text="Date et heure de traitement de la demande par l'admin", null=True, verbose_name='Date de traitement'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='donnees_originales',
            field=models.JSONField(help_text="Données originales de l'activité avant modification", verbose_name='Données originales'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='nouvelles_donnees',
            field=models.JSONField(help_text="Nouvelles données proposées pour l'activité", verbose_name='Nouvelles données'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='raison',
            field=models.TextField(help_text='Justification de la demande de modification', verbose_name='Raison de la modification'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='statut',
            field=models.CharField(choices=[('en_attente', 'En attente'), ('approuvee', 'Approuvée'), ('rejetee', 'Rejetée')], default='en_attente', help_text='Statut actuel de la demande', max_length=15, verbose_name='Statut'),
        ),
        migrations.AlterField(
            model_name='demandemodification',
            name='type_activite',
            field=models.CharField(choices=[('prise', 'Prise de clés'), ('remise', 'Remise de clés')], help_text="Type d'activité à modifier : prise ou remise de clés", max_length=10, verbose_name="Type d'activité"),
        ),
        migrations.AlterField(
            model_name='panne',
            name='activite',
            field=models.ForeignKey(blank=True, help_text='Activité associée à la panne (optionnel)', null=True, on_delete=django.db.models.deletion.CASCADE, to='activities.activite', verbose_name='Activité liée'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='chauffeur',
            field=models.ForeignKey(help_text='Chauffeur qui a signalé la panne', on_delete=django.db.models.deletion.CASCADE, to='drivers.chauffeur', verbose_name='Chauffeur'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='cout_reparation',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Coût de la réparation en euros', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Coût de réparation (€)'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='date_creation',
            field=models.DateTimeField(auto_now_add=True, help_text='Date et heure de signalement de la panne', verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='date_modification',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière modification'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='date_reparation',
            field=models.DateTimeField(blank=True, help_text='Date et heure de la réparation', null=True, verbose_name='Date de réparation'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='description',
            field=models.TextField(help_text='Description détaillée du problème mécanique', verbose_name='Description du problème'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='severite',
            field=models.CharField(choices=[('mineure', 'Mineure'), ('moderee', 'Modérée'), ('majeure', 'Majeure'), ('critique', 'Critique')], default='mineure', help_text='Niveau de sévérité de la panne', max_length=10, verbose_name='Sévérité'),
        ),
        migrations.AlterField(
            model_name='panne',
            name='statut',
            field=models.CharField(choices=[('signalee', 'Signalée'), ('en_cours', 'En cours de réparation'), ('reparée', 'Réparée'), ('annulee', 'Annulée')], default='signalee', help_text='Statut actuel de la panne', max_length=10, verbose_name='Statut'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='chauffeur',
            field=models.ForeignKey(help_text='Chauffeur qui prend les clés', on_delete=django.db.models.deletion.CASCADE, to='drivers.chauffeur', verbose_name='Chauffeur'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='date',
            field=models.DateField(help_text='Date de prise des clés', verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='date_creation',
            field=models.DateTimeField(auto_now_add=True, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='heure_prise',
            field=models.TimeField(help_text='Heure à laquelle les clés ont été prises', verbose_name='Heure de prise'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='objectif_recette',
            field=models.IntegerField(help_text='Objectif de recette fixé pour la journée en FCFA', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Objectif de recette (FCFA)'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='plein_carburant',
            field=models.BooleanField(default=False, help_text='Indique si le véhicule a le plein de carburant', verbose_name='Plein de carburant'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='probleme_mecanique',
            field=models.CharField(default='Aucun', help_text='Description des problèmes mécaniques éventuels', max_length=200, verbose_name='Problème mécanique'),
        ),
        migrations.AlterField(
            model_name='prisecles',
            name='signature',
            field=models.TextField(help_text='Signature électronique du chauffeur', verbose_name='Signature électronique'),
        ),
        migrations.AlterField(
            model_name='recette',
            name='chauffeur',
            field=models.ForeignKey(help_text='Chauffeur associé à cette recette', on_delete=django.db.models.deletion.CASCADE, to='drivers.chauffeur', verbose_name='Chauffeur'),
        ),
        migrations.AlterField(
            model_name='recette',
            name='date',
            field=models.DateField(help_text='Date de la recette', verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='recette',
            name='date_creation',
            field=models.DateTimeField(auto_now_add=True, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='recette',
            name='date_modification',
            field=models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière modification', verbose_name='Dernière modification'),
        ),
        migrations.AlterField(
            model_name='recette',
            name='montant',
            field=models.DecimalField(decimal_places=2, help_text='Montant de la recette en euros (legacy)', max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Montant (€)'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='chauffeur',
            field=models.ForeignKey(help_text='Chauffeur qui remet les clés', on_delete=django.db.models.deletion.CASCADE, to='drivers.chauffeur', verbose_name='Chauffeur'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='date',
            field=models.DateField(help_text='Date de remise des clés', verbose_name='Date'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='date_creation',
            field=models.DateTimeField(auto_now_add=True, help_text="Date et heure de création de l'enregistrement", verbose_name='Date de création'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='heure_remise',
            field=models.TimeField(help_text='Heure à laquelle les clés ont été remises', verbose_name='Heure de remise'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='plein_carburant',
            field=models.BooleanField(default=False, help_text='Indique si le véhicule a le plein de carburant', verbose_name='Plein de carburant'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='probleme_mecanique',
            field=models.CharField(default='Aucun', help_text='Description des problèmes mécaniques éventuels', max_length=200, verbose_name='Problème mécanique'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='recette_realisee',
            field=models.IntegerField(help_text='Montant de la recette réalisée pendant la journée en FCFA', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Recette réalisée (FCFA)'),
        ),
        migrations.AlterField(
            model_name='remisecles',
            name='signature',
            field=models.TextField(help_text='Signature électronique du chauffeur', verbose_name='Signature électronique'),
        ),
        migrations.AlterModelTable(
            name='activite',
            table='activities_activite_legacy',
        ),
        migrations.AlterModelTable(
            name='demandemodification',
            table='activities_demande_modification',
        ),
        migrations.AlterModelTable(
            name='panne',
            table='activities_panne',
        ),
        migrations.AlterModelTable(
            name='prisecles',
            table='activities_prise_cles',
        ),
        migrations.AlterModelTable(
            name='recette',
            table='activities_recette_legacy',
        ),
        migrations.AlterModelTable(
            name='remisecles',
            table='activities_remise_cles',
        ),
    ]
